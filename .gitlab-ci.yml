include:
  - project: "platform/base/pipeline"
    ref: master
    file:
      - "template.gitlab-ci.yml"
  - project: "mobile/mobile-all/android-all/platform-subgroup/pipeline/pipeline"
    ref: "main"
    file:
      - "slack_send.gitlab-ci.yml"

.allocate_emulator:
  variables:
    SDK_VERSION: "android-32"
  script:
    - echo Allocating an emulator with SDK version $SDK_VERSION
    - curl http://10.84.107.62/public/awilix-cli/awilix-cli-101 --create-dirs -o $HOME/awilix-bin/awilix-cli
    - chmod +x $HOME/awilix-bin/awilix-cli
    - export PATH=$PATH:$HOME/awilix-bin/
    - awilix-cli allocate -v $SDK_VERSION -s pixel_6
    - adb shell settings put global window_animation_scale 0.0
    - adb shell settings put global transition_animation_scale 0.0
    - adb shell settings put global animator_duration_scale 0.0

stages:
  - build
  - check
  - screenshot
  - deploy
  - announcement

variables:
  VIRTUAL_ENV: "venv"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip

build:
  stage: build
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  script:
    - gradle assemble
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      when: always

androidTestCompile:
  stage: build
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  script:
    - gradle :app:compileDebugAndroidTestKotlin
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      when: always

check:
  stage: check
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  script:
    - gradle check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      when: always

publish:
  stage: deploy
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  script:
    - gradle publishReleasePublicationToNexusRepository
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      changes:
        - gradle/published-libs.versions.toml

setup:
  stage: deploy
  image: python:3.6
  script:
    - python3 -m venv $VIRTUAL_ENV
    - source $VIRTUAL_ENV/bin/activate
    - pip install --upgrade pip
    - pip install -r ./scripts/requirements.txt
  artifacts:
    paths:
      - venv/
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      changes:
        - gradle/published-libs.versions.toml

dokka:
  stage: deploy
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  script:
    - gradle dokkaHtmlMultiModule
    - mkdir -p htmlMultiModule
    - mv build/dokka/htmlMultiModule/* htmlMultiModule/
  artifacts:
    paths:
      - htmlMultiModule  # Store the dokka output on htmlMultiModule folder as an artifact
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'

pages:
  stage: deploy
  image: ruby:3.2
  needs: ["dokka"]
  script:
    - gem install bundler
    - bundle install
    - bundle exec jekyll build -s htmlMultiModule -d public
  artifacts:
    paths:
      - htmlMultiModule
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'

announce:
  stage: announcement
  image: python:3.6
  needs: [ "publish", "setup" ]
  script:
    - source venv/bin/activate
    - python3 scripts/publish_message_description.py
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE != "schedule"'
      changes:
        - gradle/published-libs.versions.toml

shot:
  stage: screenshot
  image: registry.trendyol.com/mobile/mobile-all/android-all/platform-subgroup/image/android-sdk:8.13.0-jdk21-35.0.0-27.2.12479018-34-0bcdeee8
  extends: .allocate_emulator
  script:
    - !reference [.allocate_emulator, script]
    - gradle executeScreenshotTests
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

shot-success:
  stage: screenshot
  extends: .slack_send
  needs: ["shot"]
  variables:
    SLACK_CHANNEL: $SLACK_DEV_CHANNEL
    SLACK_MESSAGE: "Screenshot test run is success :saygilar: You can access to the log from <$CI_PIPELINE_URL|here>."
    SLACK_TOKEN: $SLACK_TOKEN
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: on_success

shot-failure:
  stage: screenshot
  extends: .slack_send
  needs: ["shot"]
  variables:
    SLACK_CHANNEL: $SLACK_DEV_CHANNEL
    SLACK_MESSAGE: "Screenshot test run is failed :hellmo: You can access to the error log from <$CI_PIPELINE_URL|here>."
    SLACK_TOKEN: $SLACK_TOKEN
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: on_failure