# This is a basic workflow to help you get started with Actions

name: Komposto CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
  push:
    branches: [ "main" ] # For testing purposes
  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  screenshot-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Full git history for comparing changes
          ref: ${{ github.head_ref }}  # This checks out the PR source branch
          token: ${{ secrets.GITHUB_TOKEN }}  # Need a token with push permissions

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v4

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-32

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 32
          arch: x86_64
          profile: pixel_6
          target: google_apis
          avd-name: ubuntu-avd-x86_64-32
          emulator-boot-timeout: 120
          script: echo "Generated AVD snapshot for caching."

      - name: Run screenshot tests
        id: run_tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 32
          arch: x86_64
          profile: pixel_6
          target: google_apis
          avd-name: ubuntu-avd-x86_64-32
          emulator-boot-timeout: 120
          script: ./gradlew executeScreenshotTests
        continue-on-error: true
      
      - name: Record new screenshots if tests failed
        uses: reactivecircus/android-emulator-runner@v2
        if: steps.run_tests.outcome == 'failure'
        with:
          api-level: 32
          arch: x86_64
          profile: pixel_6
          target: google_apis
          avd-name: ubuntu-avd-x86_64-32
          emulator-boot-timeout: 120
          script: ./gradlew executeScreenshotTests -Precord

      - name: Commit new screenshots
        if: steps.run_tests.outcome == 'failure' && github.event_name == 'pull_request'
        run: |
          git config --local user.email "ci@github.actions.com"
          git config --local user.name "GitHub Actions"
          git add app/screenshots/debug/
          git commit -m "Update screenshots from CI" || echo "No changes to commit"
          git push
      
      - name: Upload Screenshot Test Results
        if: steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: screenshot-test-results
          path: |
            app/screenshots/debug/
            app/build/tmp/shot/screenshot/
            app/build/reports/shot/debug/verification/
          retention-days: 1
          
      - name: Send success message to Slack
        if: success()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_DEV_CHANNEL_ID }}
            text: "✅ Screenshot tests completed successfully! \nPipeline: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            
      - name: Send failure message to Slack
        if: failure()
        uses: slackapi/slack-github-action@v2.1.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_DEV_CHANNEL_ID }}
            text: "❌ Screenshot tests failed! \nPipeline: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"