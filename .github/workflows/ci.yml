# This is a basic workflow to help you get started with Actions

name: Komposto CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Build
        run: ./gradlew assemble
  androidTestCompile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Compile Android Tests
        run: ./gradlew :app:compileDebugAndroidTestKotlin
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Run checks
        run: ./gradlew check
  publish:
    runs-on: ubuntu-latest
    needs: [check]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Publish
        run: echo "TODOTODOTODOTODOTODOTODO publish"
  dokka:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle
      - name: Generate documentation
        run: |
          ./gradlew dokkaHtmlMultiModule
          mkdir -p htmlMultiModule
          mv build/dokka/htmlMultiModule/* htmlMultiModule/
      - name: Upload documentation
        uses: actions/upload-artifact@v4
        with:
          name: dokka-docs
          path: htmlMultiModule/
  pages:
    runs-on: ubuntu-latest
    needs: [dokka]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Download dokka docs
        uses: actions/download-artifact@v3
        with:
          name: dokka-docs
          path: htmlMultiModule
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
      - name: Build Pages
        run: |
          gem install bundler
          bundle install
          bundle exec jekyll build -s htmlMultiModule -d public
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
  announce:
    runs-on: ubuntu-latest
    needs: [publish]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Download venv
        uses: actions/download-artifact@v3
        with:
          name: venv
          path: venv
      - name: Send announcement
        run: |
          echo "TODOTODOTODOTODOTODOTODO sendAnnouncement"
